import jsPDF from 'jspdf';
import { GRADE_POINTS } from '../context/GPAContext';

export const exportGPAToPDF = (subjects, gpa, totalCredits) => {
  const doc = new jsPDF();
  
  // Title
  doc.setFontSize(20);
  doc.setTextColor(60, 60, 60);
  doc.text('GPA Report', 20, 20);
  
  // Date
  doc.setFontSize(10);
  doc.setTextColor(120, 120, 120);
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 30);
  
  // Summary Box
  doc.setDrawColor(200, 200, 200);
  doc.rect(20, 40, 170, 30);
  
  doc.setFontSize(12);
  doc.setTextColor(60, 60, 60);
  doc.text('Summary:', 25, 50);
  doc.text(`GPA: ${gpa.toFixed(2)}`, 25, 58);
  doc.text(`Total Credits: ${totalCredits}`, 100, 58);
  doc.text(`Total Subjects: ${subjects.length}`, 25, 66);
  
  // Performance Level
  let performance = '';
  if (gpa >= 3.5) performance = 'Excellent Performance';
  else if (gpa >= 2.0) performance = 'Good Performance';
  else performance = 'Needs Improvement';
  doc.text(`Performance: ${performance}`, 100, 66);
  
  // Subjects Table Header
  doc.setFontSize(14);
  doc.setTextColor(60, 60, 60);
  doc.text('Subject Details:', 20, 85);
  
  // Table headers
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text('Subject Name', 20, 95);
  doc.text('Credits', 100, 95);
  doc.text('Grade', 130, 95);
  doc.text('Grade Points', 160, 95);
  
  // Table line
  doc.setDrawColor(200, 200, 200);
  doc.line(20, 97, 190, 97);
  
  // Subject rows
  let yPosition = 105;
  subjects.forEach((subject, index) => {
    if (yPosition > 270) { // New page if needed
      doc.addPage();
      yPosition = 20;
    }
    
    doc.setTextColor(60, 60, 60);
    doc.text(subject.name, 20, yPosition);
    doc.text(subject.credits.toString(), 100, yPosition);
    doc.text(subject.grade, 130, yPosition);
    doc.text(GRADE_POINTS[subject.grade].toString(), 160, yPosition);
    
    yPosition += 8;
  });
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(120, 120, 120);
  doc.text('Generated by GPA Calculator App', 20, 285);
  
  // Download
  doc.save(`GPA_Report_${new Date().toISOString().split('T')[0]}.pdf`);
};

export const exportCGPAToPDF = (semesters, cgpa, totalCredits) => {
  const doc = new jsPDF();
  
  // Title
  doc.setFontSize(20);
  doc.setTextColor(60, 60, 60);
  doc.text('CGPA Report', 20, 20);
  
  // Date
  doc.setFontSize(10);
  doc.setTextColor(120, 120, 120);
  doc.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, 30);
  
  // Summary Box
  doc.setDrawColor(200, 200, 200);
  doc.rect(20, 40, 170, 40);
  
  doc.setFontSize(12);
  doc.setTextColor(60, 60, 60);
  doc.text('Summary:', 25, 50);
  doc.text(`Cumulative GPA: ${cgpa.toFixed(2)}`, 25, 58);
  doc.text(`Total Credits: ${totalCredits}`, 25, 66);
  doc.text(`Total Semesters: ${semesters.length}`, 100, 58);
  
  // Average GPA
  const avgGPA = semesters.length > 0 ? 
    semesters.reduce((sum, s) => sum + s.gpa, 0) / semesters.length : 0;
  doc.text(`Average GPA: ${avgGPA.toFixed(2)}`, 100, 66);
  
  // Performance Level
  let performance = '';
  if (cgpa >= 3.5) performance = 'Outstanding Academic Performance';
  else if (cgpa >= 2.0) performance = 'Good Academic Standing';
  else performance = 'Academic Improvement Needed';
  doc.text(`Performance: ${performance}`, 25, 74);
  
  // Semester Table Header
  doc.setFontSize(14);
  doc.setTextColor(60, 60, 60);
  doc.text('Semester Details:', 20, 95);
  
  // Table headers
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text('Semester', 20, 105);
  doc.text('GPA', 80, 105);
  doc.text('Credits', 110, 105);
  doc.text('Quality Points', 150, 105);
  
  // Table line
  doc.setDrawColor(200, 200, 200);
  doc.line(20, 107, 190, 107);
  
  // Semester rows
  let yPosition = 115;
  semesters.forEach((semester, index) => {
    if (yPosition > 270) { // New page if needed
      doc.addPage();
      yPosition = 20;
    }
    
    doc.setTextColor(60, 60, 60);
    doc.text(semester.name, 20, yPosition);
    doc.text(semester.gpa.toFixed(2), 80, yPosition);
    doc.text(semester.credits.toString(), 110, yPosition);
    doc.text((semester.gpa * semester.credits).toFixed(2), 150, yPosition);
    
    yPosition += 8;
  });
  
  // Calculation explanation
  yPosition += 10;
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text('CGPA Calculation:', 20, yPosition);
  yPosition += 8;
  doc.text(`CGPA = Total Quality Points รท Total Credits`, 20, yPosition);
  yPosition += 6;
  doc.text(`CGPA = ${(cgpa * totalCredits).toFixed(2)} รท ${totalCredits} = ${cgpa.toFixed(2)}`, 20, yPosition);
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(120, 120, 120);
  doc.text('Generated by GPA Calculator App', 20, 285);
  
  // Download
  doc.save(`CGPA_Report_${new Date().toISOString().split('T')[0]}.pdf`);
};
